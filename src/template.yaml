AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: weather-processor
    Description: Simple weather processor
    Author: felixcriv
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    Labels: ['tests']
    HomePageUrl: https://github.com/user1/my-app-project
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/user1/my-app-project
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 1
Resources:
  WeatherFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: weather-processor/
      Handler: app.weatherHandler
      Role: 
        Fn::GetAtt:
        - ParameterStoreWeatherFunctionRoleDev
        - Arn
      Runtime: nodejs8.10
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          appId: weather-app
      Events:
        weatherProcessor:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /weather
            Method: GET
  ParameterStoreWeatherFunctionRoleDev:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - ssm:GetParameter*
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/dev/weather-processor*
          Version: '2012-10-17'
        PolicyName: ParameterStoreWeatherFunctionParameterAccess
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: ParameterStoreWeatherFunctionBasicExecution
      - PolicyDocument:
          Statement:
          - Action:
            - 'kms:Decrypt'
            Effect: Allow
            Resource: 'arn:aws:kms:us-east-1:825749960288:key/c8490cba-7678-47ea-9f37-d691b42db71a'
          Version: '2012-10-17'
        PolicyName: WeatherProcessorDecrypt

Outputs:

    WeatherApi:
      Description: "API Gateway endpoint URL for Prod stage for weather function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/weather/"

    WeatherFunction:
      Description: "Weather Lambda Function ARN"
      Value: !GetAtt WeatherFunction.Arn
